version: "3.9"
services:
  citus:
    image: citusdata/citus:10.2
    build:
      context: ./debezium-postgres-citus
    ports:
      - 5432:5432
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./ads.csv:/data/ads.csv
      - ./campaigns.csv:/data/campaigns.csv
      - ./companies.csv:/data/companies.csv
      - ./postgres_6:/var/lib/postgresql
      - ./entity_attribute_group.sql:/docker-entrypoint-initdb.d/z-entity_attribute_group.sql
      - ./postgres.conf:/var/lib/postgresql/data/pgdata/postgresql.conf
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5050:80
    env_file:
      - .env

  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "2181"]
      interval: 2s
      timeout: 2s
      retries: 15

  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
     - 9092:9092
     - 9093:9093
    links:
     - zookeeper
    networks:
      - default
    environment:
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "9092"]
      interval: 2s
      timeout: 2s
      retries: 15
    depends_on:
      - zookeeper
  
  schema-registry:
    image: confluentinc/cp-schema-registry
    ports:
     - 8181:8181
     - 8081:8081
    environment:
     - KAFKA_REST_ZOOKEEPER_CONNECT=zookeeper:2181
     - SCHEMA_REGISTRY_DEBUG=true
     - SCHEMA_REGISTRY_HOST_NAME=schema-registry
     - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
     - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092

    links:
     - zookeeper
    depends_on:
      - kafka

  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    build:
      context: debezium-jdbc-es
      args:
        JMX_AGENT_VERSION: 0.15.0
    ports:
     - 8083:8083
     - 1976:1976
    restart: on-failure:5
    links:
     - kafka
     - citus
     - schema-registry
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
     - KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
     - VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
     - INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
     - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
     - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
     - KAFKA_OPTS=-javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=8080:/kafka/etc/config.yml
     - JMXHOST=localhost
     - JMXPORT=1976
    #  - CLASSPATH=kafka/connect/debezium-connector-postgres/postgresql-42.2.22.jar
    cpus: 6.0
    volumes:
      - ./:/app
    depends_on:
      - kafka
      - schema-registry

  prometheus:
    build:
      context: debezium-prometheus
      args:
        PROMETHEUS_VERSION: v2.26.0
    ports:
     - 9090:9090
    links:
     - connect
  grafana:
    build:
      context: debezium-grafana
      args:
        GRAFANA_VERSION: 7.5.5
    ports:
     - 3000:3000
    links:
     - prometheus
    environment:
     - DS_PROMETHEUS=prometheus

  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    ports:
      - "9000:9000"
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
